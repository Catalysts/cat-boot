buildscript {
    ext.bintrayUser    = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
    ext.bintrayKey     = project.hasProperty('bintrayKey')  ? project.bintrayKey  : System.getenv('BINTRAY_KEY')
    ext.bintrayEnabled = project.bintrayUser && project.bintrayKey
    ext.sonatypeUser   = project.hasProperty('sonatypeUser') ? project.sonatypeUser : System.getenv('SONATYPE_USER')
    ext.sonatypeKey    = project.hasProperty('sonatypeKey') ? project.sonatypeKey : System.getenv('SONATYPE_KEY')
    ext.mavenCentralSyncEnabled = project.sonatypeUser && project.sonatypeKey
    
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'http://repo.spring.io/milestone' }
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.M3'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5'
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.13'
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE'
    }
}

apply from: 'properties.gradle'
apply plugin: 'org.sonarqube'
apply plugin: 'build-dashboard'

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
    apply plugin: 'io.spring.dependency-management'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'

    description = 'Cat-Boot'
    group cbGroup
    version cbVersion

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        dependencies {
            dependency 'commons-logging:commons-logging:1.2'
            dependency 'org.springframework.boot:spring-boot-starter:2.0.0.M3'
        }
    }

    dependencies {
        testCompile('junit:junit')
        testCompile('org.mockito:mockito-core')
        testCompile('org.assertj:assertj-core')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('commons-logging:commons-logging')
    }

    repositories {
        jcenter()
        maven {
            url 'http://repo.spring.io/milestone/'
        }
    }

    // package sources
    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
    
    // package javadoc
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    if (bintrayEnabled) {
        apply plugin: 'com.jfrog.bintray'
        apply from: "$rootProject.projectDir/jcenter.gradle"
        apply from: "$rootProject.projectDir/artifactory.gradle"
        apply from: "$rootProject.projectDir/maven.gradle"

        /* artifactory only for snapshots */
        artifactoryPublish.onlyIf {
            (version ==~ /.*SNAPSHOT/)
        }

        /* releases only for bintray */
        bintrayUpload.onlyIf {
            !(version ==~ /.*SNAPSHOT/)
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}
